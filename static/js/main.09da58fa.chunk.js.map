{"version":3,"sources":["Navbar.jsx","BlogList.jsx","usefetch.js","Home.jsx","Create.js","BlogDetails.js","NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","BlogList","blogs","title","handleDelete","map","blog","id","author","useFetch","url","useState","data","setData","isPending","setIsPending","error","setError","useEffect","abortCont","AbortController","setTimeout","fetch","signal","then","res","ok","Error","json","catch","err","name","console","log","message","abort","Home","Create","setTitle","body","setBody","setAuthor","history","useHistory","onSubmit","e","preventDefault","method","headers","JSON","stringify","push","type","required","value","onChange","target","BlogDetails","useParams","onClick","NotFound","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09da58fa.chunk.js","sourcesContent":["import { Link } from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return ( \r\n        <nav className=\"navbar\">\r\n            <h1>The Dojo Blog</h1>\r\n            <div className='links'>\r\n                <Link to=\"/\">Home</Link>\r\n                <Link to=\"/create\" >New Blog</Link>\r\n            </div>\r\n        </nav>\r\n     );\r\n}\r\n \r\nexport default Navbar ;","import { Link } from \"react-router-dom\";\r\n\r\nconst BlogList = ({blogs, title, handleDelete}) => {\r\n\r\n    return ( \r\n        <div className=\"blog-list\">\r\n            <h2>{title}</h2>\r\n            {blogs.map((blog) => (\r\n                <div className=\"blog-preview\" key={blog.id}>\r\n                    <Link to={`/blogs/${blog.id}`}>\r\n                        <h2>{blog.title}</h2>\r\n                        <p>Written by {blog.author}</p>\r\n                    </Link>\r\n                </div>\r\n            ))}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogList;","import { useState, useEffect } from \"react\";\r\n\r\nconst useFetch = (url) => {\r\n\r\n    const [data, setData] = useState(null);\r\n    const [isPending, setIsPending] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    setTimeout(() => {\r\n            fetch(url, { signal: abortCont.signal})\r\n            .then(res => {\r\n                if(!res.ok) {\r\n                    throw Error('could not fetch the data for that resource')\r\n                }\r\n                return res.json();\r\n            })\r\n            .then(data => {\r\n                setData(data);\r\n                setIsPending(false);\r\n                setError(null);\r\n            })\r\n            .catch(err => {\r\n                if(err.name === 'AbortError'){\r\n                    console.log('fetch aborted');\r\n                } else {\r\n                    setIsPending(false);\r\n                    setError(err.message);\r\n                }\r\n            })\r\n        }, 1000); \r\n\r\n        return () => abortCont.abort();\r\n    }, [url])\r\n\r\n    return{data, isPending, error}\r\n}\r\n\r\nexport default useFetch;","import BlogList from \"./BlogList\";\r\nimport useFetch from \"./usefetch\";\r\n\r\nconst Home = () => {\r\n    const {data:blogs, isPending, error} = useFetch(\"http://localhost:8000/blogs\"); \r\n\r\n    return ( \r\n        <div className=\"home\">\r\n            { error && <div>{error}</div> }\r\n            {isPending && <div>Loading...</div>}\r\n            {blogs && <BlogList blogs={blogs} title='All Blogs!' />} \r\n        </div>  \r\n     );\r\n}\r\n \r\nexport default Home;","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Create = () => {\r\n    const[title, setTitle] = useState('');\r\n    const[body, setBody] = useState('');\r\n    const[author, setAuthor] = useState('mario');\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const blog = {title, body, author};\r\n\r\n    \r\n        fetch('http://localhost:8000/blogs/' , {\r\n            method: 'POST' ,\r\n            headers: {\"Content-Type\":\"application/json\"},\r\n            body: JSON.stringify(blog)\r\n        }).then(() => {\r\n            console.log(\"new blog added\");\r\n            history.push('/');\r\n        });\r\n\r\n    }\r\n\r\n    return ( \r\n        <div className=\"create\">\r\n            <h2>Add a New Blog</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label>Blog title:</label>\r\n                <input type=\"text\"\r\n                required\r\n                value={title}\r\n                onChange={(e) => setTitle(e.target.value)}\r\n                />\r\n                <label>Blog body</label>\r\n                <textarea \r\n                    required\r\n                    value={body}\r\n                    onChange={(e) => setBody(e.target.value)}\r\n                ></textarea>\r\n                <label>Blog author:</label>\r\n                <select\r\n                    value={author}\r\n                    onChange={(e) => setAuthor(e.target.value)}\r\n                >\r\n                    <option value=\"mario\">mario</option>\r\n                    <option value=\"yoshi\">yoshi</option>\r\n                </select>\r\n                <button>Add Blog</button>\r\n    \r\n                <p>{title}</p>\r\n                <p>{body}</p>\r\n                <p>{author}</p>\r\n            </form>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Create;","import { useHistory, useParams } from \"react-router-dom\";\r\nimport useFetch from \"./usefetch\";\r\n\r\nconst BlogDetails = () => {\r\n    const {id} = useParams();\r\n    const { data:blog, error , isPending} = useFetch('http://localhost:8000/blogs/' + id);\r\n    const history = useHistory();\r\n\r\n    const handleClick =() => {\r\n        fetch('http://localhost:8000/blogs/' + blog.id , {\r\n            method: 'DELETE'\r\n        }).then(() => {\r\n            history.push('/');\r\n        })\r\n    }\r\n\r\n    return ( \r\n        <div className=\"blog-details\">\r\n            { isPending && <div>Loading...</div> }\r\n            { error && <div>{error}</div>}\r\n            { blog && (\r\n                <article>\r\n                    <h2>{blog.title}</h2>\r\n                    <p>Written by {blog.author}</p>\r\n                    <div>{blog.body}</div>\r\n                    <button onClick={handleClick}>Delete</button>\r\n                </article>\r\n            )}\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default BlogDetails;","import { Link } from \"react-router-dom\"\r\n\r\nconst NotFound= () => {\r\n    return ( \r\n        <div className=\"not-found\">\r\n            <h2>Sorry!</h2>\r\n            <p>That page cannot be found</p>\r\n            <Link to=\"/\">Back to the home page...</Link>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default NotFound","import Navbar from './Navbar';\nimport Home from './Home';\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Create from './Create';\nimport BlogDetails from './BlogDetails';\nimport NotFound from './NotFound';\n\nfunction App() {\n\n  return (\n    <Router>\n    <div className=\"App\">\n      <Navbar />\n      <div className=\"content\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route path=\"/create\">\n            <Create />\n          </Route>\n          <Route path=\"/blogs/:id\">\n            <BlogDetails />\n          </Route>\n          <Route path=\"\">\n            <NotFound />\n          </Route>\n        </Switch>\n      </div>\n    </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}